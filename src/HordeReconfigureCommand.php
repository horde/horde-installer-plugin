<?php
declare(strict_types = 1);
namespace Horde\Composer;

use Composer\Plugin\Capability\CommandProvider as CommandProviderCapability;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Composer\Command\BaseCommand;
use Composer\InstalledVersions;
use \Composer\Util\Filesystem;

class HordeReconfigureCommand extends BaseCommand
{
    protected function configure(): void
    {
        $this->setName('horde-reconfigure');
        $this->setDescription('Rewrite autogenerated configuration');
        $this->setHelp(
                <<<EOT
Horde Installer writes various symlinks and files with installation specific paths.
If you move your installation around or manually tinker with local files, you may need to re-run this.
EOT
        );
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        // Get installed packages of types handled by installer
        $filesystem = new Filesystem;
        $hordeApps = InstalledVersions::getInstalledPackagesByType('horde-application');
        $hordeLibraries = InstalledVersions::getInstalledPackagesByType('horde-library');
        $hordeThemes = InstalledVersions::getInstalledPackagesByType('horde-theme');
        $composer = $this->getComposer();
        $rootPackage = $composer->getPackage();
        $rootPackageDir = dirname($composer->getConfig()->get('vendor-dir'));
        $output->writeln('Applying /presets for absent files in /var/config');
        $presetHandler = new PresetHandler($rootPackageDir, $filesystem);
        $presetHandler->handle();
        $output->writeln('Looking for registry snippets from apps');
        $snippetHandler = new PackageDocRegistrySnippetHandler(
            $rootPackageDir,
            $filesystem,
            $hordeApps
        );
        $snippetHandler->handle();

        $output->writeln('Writing app configs to /var/config dir');
        $hordeLocalWriter = new HordeLocalFileWriter(
            $filesystem,
            $rootPackageDir,
            $hordeApps
        );
        $hordeLocalWriter->run();
        $output->writeln('Linking app configs to /web Dir');
        $configLinker = new ConfigLinker($rootPackageDir);
        $configLinker->run();
        $output->writeln('Linking javascript tree to /web/js');
        $jsLinker = new JsTreeLinker(
            $filesystem,
            $rootPackageDir,
            $hordeApps,
            $hordeLibraries
        );
        $jsLinker->run();
        $output->writeln('Linking themes tree to /web/themes');
        $themesHandler = new ThemesHandler($filesystem, $rootPackageDir);
        $themesHandler->setupThemes();
        return 0;
    }
}